{"version":3,"file":"component---src-content-services-service-2-mdx-3d8845388f085ec74b26.js","mappings":"6NAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,GAAI,CACnFM,GAAI,sCACHD,EAAAA,cAAoBR,EAAYI,EAAG,CACpCM,KAAM,uCACL,wCAAyC,KAAMF,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,IAAK,KAAM,sEAAuEA,EAAAA,cAAoB,KAAM,KAAMA,EAAAA,cAAoB,KAAM,KAAM,0BAA2BA,EAAAA,cAAoB,KAAM,KAAM,2CAA4CA,EAAAA,cAAoB,KAAM,KAAMA,EAAAA,cAAoBR,EAAYK,EAAG,KAAM,8EAA+EG,EAAAA,cAAoB,IAAK,KAAMA,EAAAA,cAAoBR,EAAYK,EAAG,KAAM,2JAA4JG,EAAAA,cAAoB,IAAK,KAAMA,EAAAA,cAAoBR,EAAYK,EAAG,KAAM,kOAAmOG,EAAAA,cAAoB,IAAK,KAAMA,EAAAA,cAAoBR,EAAYK,EAAG,KAAM,gIAAiIG,EAAAA,cAAoB,IAAK,KAAMA,EAAAA,cAAoBR,EAAYK,EAAG,KAAM,8JAC1xC,CAKA,UAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWb,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECSA,MAAMc,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,EACnC,GACA,CAACS,EAAmBT,GAExB,C","sources":["webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/content/services/service-2.mdx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"what-is-class-2-hearing-aid-repair\"\n  }, React.createElement(_components.a, {\n    href: \"#what-is-class-2-hearing-aid-repair\"\n  }, \"What is Class 2 Hearing Aid Repair?\")), \"\\n\", React.createElement(\"div\", null, React.createElement(\"p\", null, \" Class 2 Hearing Aid Repair includes the following ouelet options:\"), React.createElement(\"ul\", null, React.createElement(\"li\", null, \"Class 1 (Basic Repair)\"), React.createElement(\"li\", null, \"Re-installation of original electronics\"), React.createElement(\"li\", null, React.createElement(_components.p, null, \"Replacement of a Faceplate and battery door because of damage or\\ndefect\"))), React.createElement(\"p\", null, React.createElement(_components.p, null, \"Any of these changes offered are always provided at a much greater\\nsavings than the purchase of a New Hearing Aid with the same or similar\\nbenefits.\")), React.createElement(\"p\", null, React.createElement(_components.p, null, \"When the Faceplate is manufactured, what is called a Hinge Pin, which\\nallows for the attachment and functioning of a battery door, is molded\\ninto the Faceplate. It infrequently becomes dislodged and cannot be\\nreplaced.\")), React.createElement(\"p\", null, React.createElement(_components.p, null, \"If the Hinge Pin becomes dislodged or otherwise damaged, such a repair\\ninvolves the complete replacement of the Faceplate.\")), React.createElement(\"p\", null, React.createElement(_components.p, null, \"The faceplate may also have to be replaced due to Physical Damage or\\nAbuse, or from the plastic cracking or otherwise being damaged and\\nunserviceable.\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","_provideComponents","components","React","id","href","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}