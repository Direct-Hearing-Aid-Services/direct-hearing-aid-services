{"version":3,"file":"component---src-pages-index-js-15ff5a6b61bc4b7ccd30.js","mappings":"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","sources":["webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Image/index.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Hero/index.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Link/index.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Metadata/GoogleFonts.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Metadata/SEO.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Metadata/index.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/utils/capitalizeFirstLetter.js","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/YelpEmbed/index.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/back.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/array.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/debug/record.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/store.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Animate/index.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst Image = ({ fileName, alt, loading, ...rest }) => {\n  const { allImageSharp } = useStaticQuery(graphql`\n    query allImages {\n      allImageSharp {\n        nodes {\n          gatsbyImageData\n          parent {\n            ... on File {\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = allImageSharp?.nodes?.find(\n    (node) => node?.parent?.name === fileName\n  )?.gatsbyImageData;\n\n  if (!image) return null;\n\n  return <GatsbyImage image={image} alt={alt} loading={loading} {...rest} />;\n};\n\nexport default Image;\n","import * as React from \"react\";\nimport Image from \"@components/Image\";\n\nconst Hero = ({ children, fileName, alt, styles = {} }) => {\n  return (\n    <div style={{ display: \"grid\" }}>\n      <Image\n        fileName={fileName}\n        alt={alt}\n        style={{\n          gridArea: \"1/1\",\n          // You can set a maximum height for the image, if you wish.\n          // maxHeight: 600,\n          filter: 'brightness(50%)',\n          ...styles\n        }}\n        layout=\"fullWidth\"\n        // You can optionally force an aspect ratio for the generated image\n        aspectratio={3 / 1}\n      />\n      <div\n        style={{\n          // By using the same grid area for both, they are stacked on top of each other\n          gridArea: \"1/1\",\n          position: \"relative\",\n          // This centers the other elements inside the hero component\n          placeItems: \"center\",\n          display: \"grid\",\n          color: 'white'\n        }}\n      >\n        {/* Any content here will be centered in the component */}\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport { isPropValid as default };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = React.useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === 'string'\n      }), /*#__PURE__*/React.createElement(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport { createStyled as default };\n","import styled from \"@emotion/styled\";\nimport { Link as GatsbyLink } from \"gatsby\";\n\nconst Link = styled(GatsbyLink)`\n    transition: .5s ease;\n    position: relative;\n    display: inline-flex;\n    overflow: hidden;\n    padding: 17px 35px 16px;\n    text-align: center;\n    z-index: 1;\n    letter-spacing: 1px;\n    font-weight: 600;\n    text-transform: uppercase;\n    background-color: ${props => props?.theme?.colors?.accent};\n    color: white;\n    cursor: pointer;\n\n    &:hover {\n      text-decoration: none;\n      outline: none;\n      border: none;\n      transition: .3s;\n      background-color: ${props => props?.theme?.colors?.indigo}\n    }\n  `\n\nexport default Link","import React from 'react'\n\nconst GoogleFonts = () => {\n  return (\n    <>\n      <link\n        key=\"google-fonts-1\"\n        rel=\"preconnect\"\n        href=\"https://fonts.googleapis.com\"\n      />\n      <link\n        key=\"google-fonts-2\"\n        rel=\"preconnect\"\n        href=\"https://fonts.gstatic.com\"\n        crossOrigin={-1}\n      />\n      <link\n        key=\"google-fonts-3\"\n        href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n    </>\n  );\n};\n\nexport default GoogleFonts;\n","// https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\nimport * as React from \"react\";\nimport { useSiteMetadata } from \"@components/Metadata/useSiteMetadata\";\n\nexport const SEO = () => {\n  const { siteMetadata } = useSiteMetadata();\n  const { description, keywords } = siteMetadata || {};\n\n  return (\n    <>\n      {/* robots */}\n      <meta name=\"robots\" content=\"index,follow\" />\n      <meta name=\"rating\" content=\"General\" />\n      <meta name=\"revisit-after\" content=\"3 DAYS\" />\n\n      {/* google */}\n      <meta name=\"google\" content=\"nositelinkssearchbox\" />\n      <meta name=\"googlebot\" content=\"notranslate\"></meta>\n      <meta\n        name=\"google-site-verification\"\n        content=\"r_wrSAcOp7jHb_SGTdSQ50S5BQXwECFbBZ8Ga8kV72Q\"\n      />\n      <meta\n        name=\"msvalidate.01\"\n        content=\"916B5A827674DA335F37275EAA93991D\"\n      ></meta>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n    </>\n  );\n};\n\nexport default SEO;\n","import React from \"react\";\nimport GoogleFonts from \"@components/Metadata/GoogleFonts\";\nimport Seo from \"@components/Metadata/SEO\";\nimport { useSiteMetadata } from \"@components/Metadata/useSiteMetadata\";\nimport { capitalizeFirstLetter } from \"@utils/capitalizeFirstLetter\";\n\nconst Metadata = ({ title, location, children }) => {\n  const { siteMetadata, buildTime } = useSiteMetadata();\n\n  const getTitleByPathname = ({ location }) => {\n    const { pathname = \"/\" } = location || {};\n    const name = pathname\n      ?.split(\"/\")\n      ?.filter((value) => value)\n      ?.map((value) => (value ? `${capitalizeFirstLetter({ string: value })} | ` : \"\"));\n    return name;\n  };\n\n  return (\n    <>\n      <GoogleFonts />\n      <Seo />\n      <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta buildversion={buildTime} />\n      <html lang=\"en\" />\n      <body className=\"body\" />\n      <title>\n        {title ? `${title} | ` : getTitleByPathname({ location })}\n        {siteMetadata?.title}\n      </title>\n      {children}\n    </>\n  );\n};\n\nexport default Metadata;\n","export const capitalizeFirstLetter = ({ string }) =>\n  string.charAt(0).toUpperCase() + string.slice(1);\n","import React from \"react\";\n\nconst FirstReview = () => (\n  <span\n    className=\"yelp-review\"\n    data-review-id=\"WxJjUkKjO61WpUP_z82MWg\"\n    data-hostname=\"www.yelp.com\"\n  >\n    Read{\" \"}\n    <a\n      href=\"https://www.yelp.com/user_details?userid=pw1i-26FQLmxMcIY1tAEtA\"\n      rel=\"nofollow noopener\"\n    >\n      Laura N.\n    </a>\n    's{\" \"}\n    <a\n      href=\"https://www.yelp.com/biz/direct-hearing-aid-services-garden-grove?hrid=WxJjUkKjO61WpUP_z82MWg\"\n      rel=\"nofollow noopener\"\n    >\n      review\n    </a>{\" \"}\n    of{\" \"}\n    <a\n      href=\"https://www.yelp.com/biz/3WU_Gnram_RwO3V334eDdQ\"\n      rel=\"nofollow noopener\"\n    >\n      Direct Hearing Aid Services\n    </a>{\" \"}\n    on{\" \"}\n    <a href=\"https://www.yelp.com\" rel=\"nofollow noopener\">\n      Yelp\n    </a>\n  </span>\n);\n\nconst SecondReview = () => (\n  <span\n    className=\"yelp-review\"\n    data-review-id=\"i0VVqksnEmspoyOVl1CcHw\"\n    data-hostname=\"www.yelp.com\"\n  >\n    Read{\" \"}\n    <a\n      href=\"https://www.yelp.com/user_details?userid=JdP09CWi6H_vGTitHrhuxA\"\n      rel=\"nofollow noopener\"\n    >\n      Jodi P.\n    </a>\n    's{\" \"}\n    <a\n      href=\"https://www.yelp.com/biz/direct-hearing-aid-services-garden-grove?hrid=i0VVqksnEmspoyOVl1CcHw\"\n      rel=\"nofollow noopener\"\n    >\n      review\n    </a>{\" \"}\n    of{\" \"}\n    <a\n      href=\"https://www.yelp.com/biz/3WU_Gnram_RwO3V334eDdQ\"\n      rel=\"nofollow noopener\"\n    >\n      Direct Hearing Aid Services\n    </a>{\" \"}\n    on{\" \"}\n    <a href=\"https://www.yelp.com\" rel=\"nofollow noopener\">\n      Yelp\n    </a>\n  </span>\n);\n\nconst ThirdReview = () => (\n  <span\n    className=\"yelp-review\"\n    data-review-id=\"rRAQsB7y_Ne_4tyg4VBmZA\"\n    data-hostname=\"www.yelp.com\"\n  >\n    Read{\" \"}\n    <a\n      href=\"https://www.yelp.com/user_details?userid=dMnI165xWLQs3tVMoYNkVw\"\n      rel=\"nofollow noopener\"\n    >\n      K M.\n    </a>\n    's{\" \"}\n    <a\n      href=\"https://www.yelp.com/biz/direct-hearing-aid-services-garden-grove?hrid=rRAQsB7y_Ne_4tyg4VBmZA\"\n      rel=\"nofollow noopener\"\n    >\n      review\n    </a>{\" \"}\n    of{\" \"}\n    <a\n      href=\"https://www.yelp.com/biz/3WU_Gnram_RwO3V334eDdQ\"\n      rel=\"nofollow noopener\"\n    >\n      Direct Hearing Aid Services\n    </a>{\" \"}\n    on{\" \"}\n    <a href=\"https://www.yelp.com\" rel=\"nofollow noopener\">\n      Yelp\n    </a>\n  </span>\n);\n\nconst YelpEmbed = () => {\n  return (\n    <>\n      <FirstReview />\n      <SecondReview />\n      <ThirdReview />\n    </>\n  );\n};\n\nexport default YelpEmbed;\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.12\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Animate = ({ initial, animate, transition, children, ...rest }) => (\n  <motion.div\n    initial={initial ? initial : { opacity: 0, scale: 0.5 }}\n    animate={animate ? animate : { opacity: 1, scale: 1 }}\n    transition={transition ? transition : { duration: 0.5 }}\n    {...rest}\n  >\n    {children ? children : null}\n  </motion.div>\n);\n\nexport default Animate;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Animate from \"@components/Animate\";\nimport Hero from \"@components/Hero\";\nimport { ContentContainer } from \"@layouts\";\nimport Link from \"@components/Link\";\nimport Metadata from \"@components/Metadata\";\nimport YelpEmbed from \"@components/YelpEmbed\";\n\nconst IndexPage = ({ data }) => {\n  return (\n    <div>\n      <Hero fileName=\"banner-1\" alt=\"banner\" styles={{ height: \"60vh\" }}>\n        <div\n          css={(theme) => ({\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            gap: \"2rem\",\n          })}\n        >\n          <Animate>\n            <h1\n              css={(theme) => ({\n                color: \"white\",\n                fontSize: \"3rem\",\n                letterSpacing: \"0.25rem\",\n              })}\n            >\n              Welcome\n            </h1>\n          </Animate>\n\n          <Animate transition={{ duration: 1 }}>\n            <ul>\n              <li>\n                We have over 30 years of experience in hearing aid services\n              </li>\n              <li>Factory trained & certified technicians</li>\n              <li>Quality and timely repairs</li>\n            </ul>\n          </Animate>\n          <Animate transition={{ duration: 1.5 }}>\n            <Link to=\"/contact\">Make An Appointment</Link>\n          </Animate>\n        </div>\n      </Hero>\n      <ContentContainer>\n        <Animate>\n          <h1>What To Know</h1>\n        </Animate>\n        <Animate transition={{ duration: 1.5 }}>\n          <ul css={(theme) => ({ paddingTop: \"1rem\" })}>\n            <li>\n              Most Hearing Aids can be repaired regardless of age to save you\n              money.\n            </li>\n            <li>\n              Offers 48-hour \"in-house\" turnaround on most hearing aid repair so\n              you can get your Hearing back faster.\n            </li>\n            <li>Provides new faceplates and upgrades on most custom models.</li>\n            <li>\n              Re-casing available on ALL custom models to extend the life of\n              your Hearing Aid.\n            </li>\n            <li>\n              Extended \"Worry-Free\" Warranty on our hearing aid repair service\n              available for an additional six months\n            </li>\n          </ul>\n        </Animate>\n      </ContentContainer>\n      <ContentContainer>\n        <Animate>\n          <h1 css={(theme) => ({ paddingBottom: \"2rem\" })}>What We Offer</h1>\n        </Animate>\n        <div\n          css={(theme) => ({\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            gap: \"1rem\",\n            flexWrap: \"wrap\",\n          })}\n        >\n          {data &&\n            data?.allMdx?.nodes?.map(({ frontmatter }, index) => (\n              <Animate key={frontmatter?.slug} transition={{ duration: index / 3 }}>\n                <Link\n                  to={frontmatter?.slug}\n                  css={(theme) => ({\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                  })}\n                >\n                  <p>{frontmatter?.title}</p>\n                </Link>\n              </Animate>\n            ))}\n        </div>\n      </ContentContainer>\n      <ContentContainer>\n        <Animate>\n          <h1 css={(theme) => ({ paddingBottom: \"2rem\" })}>\n            What Our Customers Think\n          </h1>\n        </Animate>\n        <Animate transition={{ duration: 1.5 }}>\n          <div\n            css={(theme) => ({\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              gap: \"2rem\",\n            })}\n          >\n            <YelpEmbed />\n          </div>\n        </Animate>\n      </ContentContainer>\n    </div>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head = ({ location }) => {\n  return <Metadata location={location} />;\n};\n\nexport const query = graphql`\n  query allServices {\n    allMdx(\n      sort: { frontmatter: { slug: ASC } }\n      filter: { frontmatter: { slug: { regex: \"/service/\" } } }\n    ) {\n      totalCount\n      nodes {\n        id\n        excerpt\n        tableOfContents\n        frontmatter {\n          slug\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","_allImageSharp$nodes","_allImageSharp$nodes$","fileName","alt","loading","rest","allImageSharp","useStaticQuery","image","nodes","find","node","_node$parent","parent","name","gatsbyImageData","___EmotionJSX","GatsbyImage","_extends","children","styles","style","display","Image","gridArea","filter","layout","aspectratio","position","placeItems","color","reactPropsRegex","isPropValid","prop","test","charCodeAt","testOmitPropsOnStringTag","testOmitPropsOnComponent","key","getDefaultShouldForwardProp","tag","composeShouldForwardProps","options","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","propName","Insertion","cache","serialized","isStringTag","createStyled","identifierName","targetClassName","__emotion_real","baseTag","__emotion_base","undefined","label","target","defaultShouldForwardProp","shouldUseAs","args","arguments","__emotion_styles","slice","push","raw","apply","len","length","i","Styled","w","props","ref","FinalTag","as","className","classInterpolations","mergedProps","theme","T","registered","concat","finalShouldForwardProp","newProps","_key","displayName","defaultProps","Object","defineProperty","value","withComponent","nextTag","nextOptions","_styled","GatsbyLink","_props$theme","_props$theme$colors","colors","accent","_props$theme2","_props$theme2$colors","indigo","GoogleFonts","React","rel","href","crossOrigin","SEO","siteMetadata","useSiteMetadata","description","keywords","content","title","location","buildTime","Seo","httpEquiv","buildversion","lang","_ref2","_pathname$split","_pathname$split$filte","pathname","split","map","string","charAt","toUpperCase","capitalizeFirstLetter","getTitleByPathname","FirstReview","SecondReview","ThirdReview","YelpEmbed","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","remove","index","indexOf","splice","delete","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","microtask","cancelMicrotask","queueMicrotask","isRefObject","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","createVisualElement","ProjectionNodeConstructor","visualElement","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType","createProjectionNode","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","updateFeatures","render","animationState","animateChanges","completeHandoff","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","postRender","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","div","_data$allMdx","_data$allMdx$nodes","Hero","css","flexDirection","justifyContent","alignItems","gap","Animate","fontSize","letterSpacing","Link","ContentContainer","flexWrap","allMdx","frontmatter","slug","Head","_ref3","Metadata"],"sourceRoot":""}