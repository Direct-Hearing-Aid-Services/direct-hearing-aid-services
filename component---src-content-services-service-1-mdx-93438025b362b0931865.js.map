{"version":3,"file":"component---src-content-services-service-1-mdx-93438025b362b0931865.js","mappings":"6NAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,CACnFU,GAAI,qBACHD,EAAAA,cAAoBZ,EAAYI,EAAG,CACpCU,KAAM,sBACL,sBAAuB,KAAMF,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,sBAAuB,KAAMM,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,kBAAmB,MAAO,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,CACnQM,GAAI,YACHD,EAAAA,cAAoBZ,EAAYI,EAAG,CACpCU,KAAM,aACL,aAAc,KAAMF,EAAAA,cAAoBZ,EAAYQ,GAAI,CACzDK,GAAI,YACHD,EAAAA,cAAoBZ,EAAYI,EAAG,CACpCU,KAAM,aACL,aAAc,KAAMF,EAAAA,cAAoBZ,EAAYS,GAAI,CACzDI,GAAI,YACHD,EAAAA,cAAoBZ,EAAYI,EAAG,CACpCU,KAAM,aACL,aAAc,KAAMF,EAAAA,cAAoBZ,EAAYS,GAAI,CACzDI,GAAI,YACHD,EAAAA,cAAoBZ,EAAYI,EAAG,CACpCU,KAAM,aACL,aACL,CAKA,UAJA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWjB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECXA,MAAMkB,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,EACnC,GACA,CAACS,EAAmBT,GAExB,C","sources":["webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/content/services/service-1.mdx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"services-1-header\"\n  }, React.createElement(_components.a, {\n    href: \"#services-1-header\"\n  }, \"Services 1 Header\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"First bullet point\"), \"\\n\", React.createElement(_components.li, null, \"another bullet\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"header-2\"\n  }, React.createElement(_components.a, {\n    href: \"#header-2\"\n  }, \"header 2\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"header-3\"\n  }, React.createElement(_components.a, {\n    href: \"#header-3\"\n  }, \"header 3\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"header-4\"\n  }, React.createElement(_components.a, {\n    href: \"#header-4\"\n  }, \"header 4\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"header-5\"\n  }, React.createElement(_components.a, {\n    href: \"#header-5\"\n  }, \"header 5\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","ul","li","h2","h3","h4","_provideComponents","components","React","id","href","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}