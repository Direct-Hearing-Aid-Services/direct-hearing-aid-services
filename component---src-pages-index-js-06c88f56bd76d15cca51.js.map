{"version":3,"file":"component---src-pages-index-js-06c88f56bd76d15cca51.js","mappings":"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","sources":["webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/back.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/array.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/value/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/debug/record.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/store.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Animate/index.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Card/ContentCard.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/components/Button/index.jsx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/pages/index.js"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.12\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Animate = ({ initial, animate, transition, children, ...rest }) => (\n  <motion.div\n    initial={initial ? initial : { opacity: 0, scale: 0.5 }}\n    animate={animate ? animate : { opacity: 1, scale: 1 }}\n    transition={transition ? transition : { duration: 0.5 }}\n    {...rest}\n  >\n    {children ? children : null}\n  </motion.div>\n);\n\nexport default Animate;\n","import * as React from \"react\";\nimport Image from \"@components/Image\";\n\nconst ContentCard = ({ children, fileName, alt }) => {\n  return (\n    <div\n      css={(theme) => ({\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        // flex: '1 1 0px',\n        // // display: \"flex\",\n        // // flexDirection: \"column\",\n        // // alignItems: \"center\",\n        // display: 'grid'\n        // WebkitFlex: \"1 1 0px\",\n        // MsFlex: \"1 1 0px\",\n        // flex: \"1 1 0px\",\n        // display: \"flex\",\n        // flexDirection: 'column',\n        // alignContent: \"stretch\",\n        // alignItems: \"start\",\n        // justifyItems: \"stretch\",\n        // justifyContent: \"center\",\n      })}\n    >\n      <Image\n        fileName={fileName}\n        alt={alt}\n        style={\n          {\n            // gridArea: \"1/1/2/2\",\n            // You can set a maximum height for the image, if you wish.\n            // maxHeight: 600,\n            // flex: '1 1 0px'\n          }\n        }\n        layout=\"fullWidth\"\n        // You can optionally force an aspect ratio for the generated image\n        aspectRatio={3 / 1}\n      />\n\n      {children}\n    </div>\n  );\n};\n\nexport default ContentCard;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Button = styled.button`\n    border: none;\n    appearance: none;\n    transition: .5s ease;\n    position: relative;\n    display: inline-flex;\n    overflow: hidden;\n    \n    justify-content: center;\n    padding: 0.5rem 0rem\n\n\n    text-align: center;\n    z-index: 1;\n    letter-spacing: 1px;\n    font-weight: 600;\n    text-transform: uppercase;\n    background-color: ${(props) => props?.theme?.colors?.accent};\n    color: white;\n    cursor: pointer;\n\n    &:before {\n        content: '${(props) => (!props?.children ? props?.beforeText : null)}';\n    }\n\n    &:hover {\n      text-decoration: none;\n      outline: none;\n      border: none;\n      transition: .3s;\n      background-color: ${(props) => props?.theme?.colors?.indigo};\n      &:before {\n        content: '';\n      }\n      &:after {\n        content: '${props => !props?.children ? props?.afterText : null}';\n      }\n    }\n  `;\n\nexport default Button;\n","import * as React from \"react\";\nimport Lorem from \"../components/Lorem\";\nimport Animate from \"@components/Animate\";\nimport Hero from \"../components/Hero\";\nimport { ContentContainer } from \"@layouts\";\nimport { ContentCard } from \"@components/Card\";\nimport Button from \"@components/Button\";\nimport { useBreakpoint } from \"gatsby-plugin-breakpoints\";\nimport Metadata from \"@components/Metadata\";\n\nconst IndexPage = (props) => {\n  console.log(`DEBUG IndexPage`, { props });\n  const breakpoints = useBreakpoint();\n  return (\n    <div>\n      <Hero fileName=\"banner-1\" alt=\"banner\">\n        <div\n          css={(theme) => ({\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            gap: \"3rem\",\n          })}\n        >\n          <Animate>\n            <h1\n              css={(theme) => ({\n                color: \"white\",\n                fontSize: \"3rem\",\n                letterSpacing: \"0.5rem\",\n              })}\n            >\n              Welcome\n            </h1>\n          </Animate>\n\n          <Animate transition={{ duration: 1 }}>\n            <ul>\n              <li>20+ years of experience in hearing aid services</li>\n              <li>Factory trained & certified technicians</li>\n              <li>Quality and timely repairs</li>\n            </ul>\n          </Animate>\n        </div>\n      </Hero>\n      <ContentContainer>\n        <Animate>\n          <h1>Home Page</h1>\n        </Animate>\n        <br />\n        <br />\n        <div\n          id=\"home-content\"\n          css={(theme) => ({\n            display: `${breakpoints?.md ? \"flex\" : \"grid\"}`,\n            gridTemplateColumns: \"1fr 1fr 1fr min-content\",\n            gap: \"1rem\",\n            minHeight: \"25vh\",\n          })}\n        >\n          <ContentCard fileName=\"image-1\" alt=\"image\">\n            <p>\n              \"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet,\n              consectetur, adipisci velit...\"\n            </p>\n            <Button beforeText=\"Service 1\" afterText=\"Read More\"></Button>\n          </ContentCard>\n          <ContentCard fileName=\"image-2\" alt=\"image\">\n            <p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"</p>\n            <Button beforeText=\"Service 2\" afterText=\"Read More\"></Button>\n          </ContentCard>\n          <ContentCard fileName=\"image-3\" alt=\"image\">\n            <p>\n              \"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet,\n              consectetur, adipisci velit...\"\n            </p>\n            <Button beforeText=\"Service 3\" afterText=\"Read More\"></Button>\n          </ContentCard>\n        </div>\n        <ul css={(theme) => ({ paddingTop: \"1rem\" })}>\n          <li>\n            Most Hearing Aids can be repaired regardless of age to save you\n            money.\n          </li>\n          <li>\n            Offers 48-hour \"in-house\" turnaround on most hearing aid repair so\n            you can get your Hearing back faster.\n          </li>\n          <li>Provides new faceplates and upgrades on most custom models.</li>\n          <li>\n            Re-casing available on ALL custom models to extend the life of your\n            Hearing Aid.\n          </li>\n          <li>\n            Extended \"Worry-Free\" Warranty on our hearing aid repair service\n            available for an additional six months - $129.99\n          </li>\n        </ul>\n        <Lorem />\n      </ContentContainer>\n    </div>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head = ({ location }) => {\n  return (\n    <Metadata location={location} />\n  )\n};"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","undefined","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType","createProjectionNode","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","updateFeatures","render","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","postRender","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","_ref","rest","___EmotionJSX","div","_extends","fileName","alt","css","theme","flexDirection","justifyContent","Image","_styled","_props$theme","_props$theme$colors","colors","accent","beforeText","_props$theme2","_props$theme2$colors","indigo","afterText","console","log","breakpoints","useBreakpoint","Hero","alignItems","gap","Animate","fontSize","letterSpacing","ContentContainer","md","gridTemplateColumns","minHeight","ContentCard","Button","Lorem","Head","location","Metadata"],"sourceRoot":""}