{"version":3,"file":"component---src-content-services-service-1-mdx-7cb755881633b5ad97f4.js","mappings":"6NAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,GAAI,CACnFS,GAAI,gDACHD,EAAAA,cAAoBX,EAAYI,EAAG,CACpCS,KAAM,iDACL,kDAAmD,KAAMF,EAAAA,cAAoBX,EAAYK,GAAI,CAC9FO,GAAI,0EACHD,EAAAA,cAAoBX,EAAYI,EAAG,CACpCS,KAAM,2EACL,4EAA6E,KAAMF,EAAAA,cAAoBX,EAAYM,EAAG,KAAM,qRAAsR,KAAMK,EAAAA,cAAoBX,EAAYM,EAAG,KAAM,sCAAuC,KAAMK,EAAAA,cAAoBX,EAAYO,GAAI,KAAM,KAAMI,EAAAA,cAAoBX,EAAYQ,GAAI,KAAM,uIAAwI,KAAMG,EAAAA,cAAoBX,EAAYQ,GAAI,KAAM,qIAAsI,KAAMG,EAAAA,cAAoBX,EAAYQ,GAAI,KAAM,4GAA6G,MAAO,KAAMG,EAAAA,cAAoBX,EAAYM,EAAG,KAAM,4DAA6D,KAAMK,EAAAA,cAAoBX,EAAYM,EAAG,KAAM,sVAAuV,KAAMK,EAAAA,cAAoBX,EAAYM,EAAG,KAAM,4NAA6N,KAAMK,EAAAA,cAAoBX,EAAYM,EAAG,KAAM,kPAAmP,KAAMK,EAAAA,cAAoBX,EAAYM,EAAG,KAAM,sOAAuO,KAAMK,EAAAA,cAAoBX,EAAYM,EAAG,KAAM,qdACp5E,CAKA,UAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,KAAsBV,EAAMW,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWhB,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECEA,MAAMiB,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,EACnC,GACA,CAACS,EAAmBT,GAExB,C","sources":["webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/./src/content/services/service-1.mdx","webpack://@direct-hearing-aid-service-workspace/gatsby-webapp/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"what-is-a-class-one-digital-and-power-repair\"\n  }, React.createElement(_components.a, {\n    href: \"#what-is-a-class-one-digital-and-power-repair\"\n  }, \"What is a Class One Digital and Power Repair?\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"class-1-digital-and-power-repair-an-explanation-of-this-classification\"\n  }, React.createElement(_components.a, {\n    href: \"#class-1-digital-and-power-repair-an-explanation-of-this-classification\"\n  }, \"Class 1 Digital and Power Repair: An Explanation of this Classification\")), \"\\n\", React.createElement(_components.p, null, \"A hearing aid consists of 2 basic component categories: the shell and\\nthe electronic devices which includes one or more microphones\\n(transducer) which receive sound waves, a receiver (speaker) which\\ntransmits or projects processed and modified sound, into the ear canal.\"), \"\\n\", React.createElement(_components.p, null, \"Both of these type components are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Very susceptible to contamination by dirt, dust, moisture, chemicals (such as hair spray) and ear wax created within the ear canal.\"), \"\\n\", React.createElement(_components.li, null, \"Contain very delicate membranes which can be damaged by physical shock or environmental factors, including humidity and moisture.\"), \"\\n\", React.createElement(_components.li, null, \"Some hearing aids include switches and other devices such as a Telescopic (for use with a telephone) and\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Such devices are included in this repair classification.\"), \"\\n\", React.createElement(_components.p, null, \"The nature of ear wax, in conjunction with movement, expansion and\\ncontraction of the ear canal, results in the ear wax moving within the\\near canal and getting into parts of the hearing aid, such as the\\nreceiver tube. The slightest amount of such contaminants can obstruct\\nthe passage of sound, and render the hearing aid ineffective.\"), \"\\n\", React.createElement(_components.p, null, \"Another electronic component within the hearing aid is a device called a\\ncapacitor. The manufacturer of the capacitor has a chemical ingredient\\nwhich is subject to deterioration over time, and can become defective.\"), \"\\n\", React.createElement(_components.p, null, \"Other components are: resistors, which affect the flow of electrical\\ncurrent, the amplifier, which is critical to the operation and function\\nof the hearing aid, and copper wiring which is attached by solder and\\nconnects the components.\"), \"\\n\", React.createElement(_components.p, null, \"Accidental physical abuse, such as dropping a hearing aid on a hard\\nsurface, can dislodge and damage the electronic components. A\\nmalfunction in the tolerances of these components affects the\\nperformance of the hearing aid.\"), \"\\n\", React.createElement(_components.p, null, \"Class 1 Hearing Aid Digital and Power Repair includes the repair or\\nreplacement of any of these electronic components, BUT we maintain the\\n\\\"original\\\" hearing loss settings inside the Hearing Aid. Within the\\nwarranty period provided with the repair of the hearing aid, all\\ncomponents and labor are provided regardless of whether they were\\nfunctioning according to specification at the time of the initial repair\\nand were not the cause for the original failure.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","h2","p","ul","li","_provideComponents","components","React","id","href","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}